#!/usr/bin/env bash

set -e

cat <<EOF
Tests generated commits.
EOF

REPO_ROOT=$(git rev-parse --show-toplevel)

source $REPO_ROOT/test/lib.sh

bp_cur_commit=$(current_commit $REPO_ROOT)

repo=$(empty_repo)
add_cleanup $repo

bootstrap_repo $repo

cd $repo

make boilerplate-update

ensure_nexus_makefile_include $repo

hr
echo "Generate a convention-less bootstrap commit"
make boilerplate-commit

echo "Validate the branch name"
expected_branch=boilerplate-bootstrap-$bp_cur_commit
actual_branch=$(current_branch $repo)
if [[ "$expected_branch" != "$actual_branch" ]]; then
  echo "
Expected branch: $expected_branch
Actual branch:   $actual_branch"
  exit 1
fi

echo "Validate the commit message"
expected_message=$LOG_DIR/expected_commit_message
cat <<EOF>$expected_message
    Boilerplate: Bootstrap at $bp_cur_commit
    
    https://github.com/openshift/boilerplate/commit/$bp_cur_commit
    ---
    Conventions:
      None.
EOF
actual_message=$LOG_DIR/actual_commit_message
last_commit_message $repo > $actual_message
# Let -e blow this up
diff $expected_message $actual_message

hr
echo "Fail if we have nothing to do"
rc=0
make boilerplate-commit > $LOG_DIR/out 2>&1 || rc=$?
if [[ $rc -eq 0 ]]; then
  echo "Expected failure!"
  exit 1
fi
expected='No boilerplate-related activity found in the current checkout!'
if ! grep -F -q "$expected" $LOG_DIR/out; then
  echo "Unexpected output; expected: '$expected'"
  echo "...but got:"
  cat $LOG_DIR/out
  exit 1
fi

hr
echo "Subscribe to a convention"
add_convention $repo test/test-base-convention
make boilerplate-update
make boilerplate-commit
echo "Validate the branch name"
expected_branch=boilerplate-subscribe-1-$bp_cur_commit
actual_branch=$(current_branch $repo)
if [[ "$expected_branch" != "$actual_branch" ]]; then
  echo "
Expected branch: $expected_branch
Actual branch:   $actual_branch"
  exit 1
fi

echo "Validate the commit message"
expected_message=$LOG_DIR/expected_commit_message
cat <<EOF>$expected_message
    Boilerplate: Subscribe at $bp_cur_commit
    
    Conventions:
    - test/test-base-convention: Subscribe
EOF
actual_message=$LOG_DIR/actual_commit_message
last_commit_message $repo > $actual_message
# Let -e blow this up
diff $expected_message $actual_message

hr
echo "Bootstrap and subscribe at the same time"
# Use a fresh repo
repo=$(empty_repo)
add_cleanup $repo
bootstrap_repo $repo
cd $repo
add_convention $repo test/test-base-convention
make boilerplate-update
ensure_nexus_makefile_include $repo
make boilerplate-commit
echo "Validate the branch name"
expected_branch=boilerplate-bootstrap-1-$bp_cur_commit
actual_branch=$(current_branch $repo)
if [[ "$expected_branch" != "$actual_branch" ]]; then
  echo "
Expected branch: $expected_branch
Actual branch:   $actual_branch"
  exit 1
fi

echo "Validate the commit message"
expected_message=$LOG_DIR/expected_commit_message
cat <<EOF>$expected_message
    Boilerplate: Bootstrap at $bp_cur_commit
    
    https://github.com/openshift/boilerplate/commit/$bp_cur_commit
    ---
    Conventions:
    - test/test-base-convention: Subscribe
EOF
actual_message=$LOG_DIR/actual_commit_message
last_commit_message $repo > $actual_message
# Let -e blow this up
diff $expected_message $actual_message

# TODO: Test update. This will probably need to be done between two known
# boilerplate commits by munging BOILERPLATE_GIT_CLONE; but we can't do that
# until the "from" commit already includes boilerplate-commit.
